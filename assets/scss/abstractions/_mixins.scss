@mixin transformY($distance){
  -webkit-transform: translateY($distance);
  -moz-transform: translateY($distance);
  transform: translateY($distance);
}

@mixin transformX($distance){
  -webkit-transform: translateX($distance);
  -moz-transform: translateX($distance);
  transform: translateX($distance);
}

@mixin circle($radius){
  border-radius: 50%;
  width: $radius;
  height: $radius;
}

@mixin bp($point) {
  @if $point == xs{
    @media (min-width: 321px) { @content; }
  }
  @else if $point == xs-below {
    @media (max-width: 322px) { @content; }
  }
  @else if $point == ip {
    @media (min-width: 376px) { @content; }
  }
  @else if $point == sm {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == sm-below {
    @media (max-width: 767px) { @content; }
  }
  @else if $point == md {
    @media (min-width: 992px)  { @content; }
  }
  @else if $point == lg {
    @media (min-width: 1200px)  { @content; }
  }
  @else if $point == xlg {
    @media (min-width: 1350px)  { @content; }
  }
}

@mixin aspectRatio($widthAspect, $heightAspect) {
  $aspect: $widthAspect/$heightAspect * 100px;
  // max-width: 100%;
  &:after {
    content: '';
    display: block;
    width: 100%;
    padding-bottom: $aspect;
  }
}

@mixin css_triangle($dir, $size, $color) {
  width: 0;
  height: 0;

  @if $dir == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  }

  @if $dir == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  }

  @if $dir == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
  }

  @if $dir == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }
}

/* Mixin */
@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin nice_transition($duration) {
  -webkit-transition: all $duration;
  -moz-transition: all $duration;
  -o-transition: all $duration;
  transition: all $duration;
}

@mixin placeholder_text($color) {
  ::-webkit-input-placeholder {
   color: $color;
 }
 :-moz-placeholder { /* Firefox 18- */
   color: $color;
 }
 ::-moz-placeholder {  /* Firefox 19+ */
   color: $color;
 }
 :-ms-input-placeholder {
   color: $color;
 }
}
